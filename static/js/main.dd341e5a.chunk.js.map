{"version":3,"sources":["utils.js","UserForm.js","DataLoader.js","DataVisualizer.js","MainContent.js","App.js","serviceWorker.js","index.js"],"names":["interpolate","str","params","replace","match","key","monthStartAndEnd","year","month","Date","addMonths","numMonths","resultDate","getFullYear","getMonth","formatDate","d","toISOString","split","range","start","end","incr","result","curr","push","MovingWindow","size","this","_items","nextIndex","item","length","RequestPool","onRequestComplete","runningCount","queue","results","onRequestsComplete","started","numRequests","requestFn","Error","i","request","pop","executeRequest","Promise","resolve","reject","then","maybeProcessNextRequest","nextRequest","UserForm","props","state","userId","userCookie","dateRangeOption","setUserId","bind","setUserCookie","setDateRangeOption","handleSubmit","submit","handleKeyPress","userCookieInputRef","React","createRef","className","href","onSubmit","id","type","value","onChange","name","onKeyPress","ref","event","preventDefault","now","monthStart","monthEnd","threeMonthsAgoYear","threeMonthsAgoMonth","twelveMonthsAgoYear","twelveMonthsAgoMonth","twentyFourMonthsAgoYear","twentyFourMonthsAgoMonth","sixtyMonthsAgoYear","sixtyMonthsAgoMonth","current","blur","getDateRangeFromOption","startDate","endDate","charCode","setState","target","Component","Puzzle","data","date","day","attempted","solved","cleanlySolved","solveTime","solveDate","e","JSON","stringify","puzzle_id","print_date","getTime","getTimezoneOffset","localMidnightDateFromString","getDay","undefined","firsts","checked","calcs","secondsSpentSolving","DataLoader","loaded","progress","prevProps","prevState","numPendingRequests","fetch","render","startYear","startMonth","months","endYear","endMonth","currentDate","monthsRange","monthDataRequestPool","numCompleted","numTotal","forEach","yearAndMonth","addRequest","fetchMonth","poll","filter","processMonthData","fetchPuzzles","window","ARCHIVE_URL","uid","start_date","end_date","response","json","puzzleData","puzzleRequestPool","Object","keys","puzzleDate","percent_filled","fetchPuzzle","solveData","processedData","values","map","blob","puzzleId","GAME_URL","gid","headers","DataVisualizer","timeWindow","windowSize","useSolveDate","setTimeout","draw","component","getStatus","ndx","crossfilter","weekDimension","dimension","d3","floor","countByWeekAndStatusGroup","group","reduce","not_started","dateChart","dc","width","height","margins","left","right","top","bottom","stack","elasticY","x","domain","round","xUnits","legend","solveTimeByWeekGroup","totalTime","numSolved","avgTime","sourceGroup","averageSolveTimeOverTimeGroup","all","movingWindow","g","add","windowTotals","items","acc","groupValue","windowAverage","solveTimeOverTimeChart","rangeChart","brushOn","mouseZoomable","curve","alpha","yAxisPadding","yAxis","tickValues","m","tickFormat","v","Math","solveTimeDimension","solveTimeGroup","solveTimeChart","dayDimension","dayGroup","daysOfWeekLabels","dayChart","label","statusDimension","statusGroup","statusChart","dayDimension2","solveRateByDayGroup","total","solvePct","solveRateChart","valueAccessor","solveTimeByDayGroup","solveTimeByDayChart","elasticX","seconds","minutes","secondsLeft","secondsString","formatTime","xAxis","ticks","dateDimension","table","columns","format","on","selectAll","classed","title","chartId","ChartSection","MainContent","renderVisualization","App","onInputUserDetails","attr","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd341e5a.chunk.js","sourcesContent":["export function interpolate(str, params) {\n    return str.replace(/\\{(\\w+?)\\}/g, (match, key) => {\n        return params[key];\n    })\n}\n\nexport function monthStartAndEnd(year, month) {\n    const start = new Date(year, month, 1);\n    const end = new Date(year, month+1, 0);\n    return [start, end];\n}\n\nexport function addMonths(year, month, numMonths) {\n    const resultDate = new Date(year, month + numMonths, 1);\n    return [resultDate.getFullYear(), resultDate.getMonth()];\n}\n\n// Sigh: When creating Dates from a string like \"2020-01-01\", the result is UTC midnight\n// but this may be a different day in the local timezone.\nexport function localMidnightDateFromString(str) {\n    const d = new Date(str);\n    return new Date(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n}\n\nexport function monthsRange(startYear, startMonth, endYear, endMonth) {\n    const result = [];\n    const endDate = new Date(endYear, endMonth);\n    let currentDate = new Date(startYear, startMonth);\n    while (currentDate.getTime() <= endDate.getTime()) {\n        result.push([currentDate.getFullYear(), currentDate.getMonth()]);\n        currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1);\n    }\n    return result;\n}\n\nexport function formatDate(d) {\n    return d.toISOString().split(\"T\")[0];\n}\n\nexport function formatTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const secondsLeft = Math.floor(seconds - minutes * 60);\n    const secondsString = secondsLeft < 10 ? \"0\" + secondsLeft : secondsLeft;\n    return `${minutes}:${secondsString}`;\n}\n\nexport function range(start, end, incr) {\n    const result = [];\n    let curr = start;\n    while (curr <= end) {\n        result.push(curr);\n        curr += incr;\n    }\n    return result;\n}\n\nexport class MovingWindow {\n    constructor(size) {\n        this._items = [];\n        this.size = size;\n        this.nextIndex = 0;\n    }\n\n    add(item) {\n        if (this._items.length < this.size) {\n            this._items.push(item);\n        } else {\n            this._items[this.nextIndex] = item;\n        }\n        this.nextIndex = (this.nextIndex + 1) % this.size;\n    }\n\n    items() {\n        return this._items;\n    }\n}\n\nexport class RequestPool {\n    constructor(size, onRequestComplete) {\n        this.size = size;\n        this.runningCount = 0;\n        this.queue = [];\n        this.results = [];\n        this.onRequestComplete = onRequestComplete;\n        // Initiate onRequestsComplete with no-op, until a listener polls.\n        this.onRequestsComplete = () => {};\n        this.started = false;\n        this.numRequests = 0;\n    }\n\n    addRequest(requestFn) {\n        if (this.started) {\n            throw new Error(\"Pool already started\");\n        }\n\n        this.queue.push(requestFn);\n        this.numRequests++;\n    }\n\n    start() {\n        if (this.started) {\n            throw new Error(\"Pool already started\");\n        }\n\n        this.started = true;\n        // JS is single threaded\n        for (let i = 0; i < this.size && i < this.numRequests; i++) {\n            const request = this.queue.pop(0);\n            this.executeRequest(request);\n        }\n    }\n\n    poll() {\n        if (!this.started) {\n            throw new Error(\"Not started\");\n        }\n        // Already done\n        if (this.runningCount === 0 && this.queue.length === 0) {\n            return Promise.resolve(this.results);\n        }\n\n        // Wait\n        return new Promise((resolve, reject) => {\n            this.onRequestsComplete = resolve;\n        });\n    }\n\n    executeRequest(requestFn) {\n        this.runningCount++;\n        requestFn().then(result => {\n            this.results.push(result);\n            this.runningCount--;\n            this.onRequestComplete(this.results.length, this.numRequests);\n            this.maybeProcessNextRequest();\n        });\n    }\n\n    maybeProcessNextRequest() {\n        if (this.runningCount === 0 && this.queue.length === 0) {\n            this.onRequestsComplete(this.results);\n        }\n\n        if (this.runningCount < this.size && this.queue.length > 0) {\n            const nextRequest = this.queue.pop(0);\n            this.executeRequest(nextRequest);\n        }\n    }\n\n\n}\n","import React from \"react\";\nimport \"./UserForm.css\";\nimport { monthStartAndEnd, addMonths } from \"./utils.js\";\n\nconst UID = \"77239038\"\nexport default class UserForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userId: UID,\n            userCookie: \"\",\n            dateRangeOption: \"this_year\",\n        };\n\n        this.setUserId = this.setUserId.bind(this);\n        this.setUserCookie = this.setUserCookie.bind(this);\n        this.setDateRangeOption = this.setDateRangeOption.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this); this.submit = this.submit.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n\n        this.userCookieInputRef = React.createRef();\n    }\n\n    render() {\n        return (\n            <div className=\"UserForm\">\n                <div className=\"UserForm-header\">\n                    User Information\n                </div>\n                <div className=\"UserForm-instructions\">\n                    <div className=\"UserForm-instructionsHeader\">\n                        Instructions\n                    </div>\n                    <ol>\n                        <li>\n                            Log into&nbsp;\n                            <a href={`https://myaccount.nytimes.com/seg`}>\n                                https://myaccount.nytimes.com/seg\n                            </a>\n                            &nbsp;and copy your user id\n                        </li>\n                        <li>\n                            Go to any NYTimes page and copy the value for the NYT-S cookie\n                        </li>\n                    </ol>\n                </div>\n                <form className=\"UserForm-form\" onSubmit={this.handleSubmit}> <div className=\"UserForm-fields\">\n                        <div id=\"UserForm-userId\" className=\"UserForm-field\">\n                            <label className=\"UserForm-label\">User ID</label>\n                            <input className=\"UserForm-fieldInput\" id=\"UserForm-userIdInput\" type=\"text\" value={this.state.userId} onChange={this.setUserId} />\n                        </div>\n                        <div id=\"UserForm-dateRange\" className=\"UserForm-field\">\n                            <label className=\"UserForm-label\">Date Range</label>\n                            <select name=\"dateRange\" id=\"UserForm-dateRangeInput\" className=\"UserForm-fieldInput\" value={this.state.dateRangeOption} onChange={this.setDateRangeOption}>\n                                <option value=\"this_year\">This year</option>\n                                <option value=\"last_year\">Last year</option>\n                                <option value=\"last_3\">Last 3 months</option>\n                                <option value=\"last_12\">Last 12 months</option>\n                                <option value=\"last_24\">Last 2 years</option>\n                                <option value=\"last_60\">Last 5 years</option>\n                            </select>\n                        </div>\n                        <div id=\"UserForm-userCookie\" className=\"UserForm-field\">\n                            <label className=\"UserForm-label\">NYT-S Cookie</label>\n                            <textarea className=\"UserForm-fieldInput\" id=\"UserForm-userCookieInput\" type=\"text\" value={this.state.userCookie} onChange={this.setUserCookie} onKeyPress={this.handleKeyPress} ref={this.userCookieInputRef}/>\n                        </div>\n                    </div>\n                    <input className=\"UserForm-submitButton\" type=\"submit\"/>\n                </form>\n            </div>\n        );\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.submit();\n    }\n\n    getDateRangeFromOption() {\n        const now = new Date();\n        const [monthStart, monthEnd] = monthStartAndEnd(now.getFullYear(), now.getMonth());\n        switch(this.state.dateRangeOption) {\n            case \"this_year\":\n                const yearStart = new Date(now.getFullYear(), 0, 1);\n                return [yearStart, monthEnd];\n            case \"last_year\":\n                const lastYearStart = new Date(now.getFullYear() - 1, 0, 1);\n                const lastYearEnd = new Date(now.getFullYear(), 0, 0);\n                return [lastYearStart, lastYearEnd];\n            case \"last_3\":\n                const [threeMonthsAgoYear, threeMonthsAgoMonth] = addMonths(monthStart.getFullYear(), monthStart.getMonth(), -2)\n                const threeMonthsAgo = new Date(threeMonthsAgoYear, threeMonthsAgoMonth);\n                return [threeMonthsAgo, monthEnd];\n            case \"last_12\":\n                const [twelveMonthsAgoYear, twelveMonthsAgoMonth] = addMonths(monthStart.getFullYear(), monthStart.getMonth(), -11)\n                const twelveMonthsAgo = new Date(twelveMonthsAgoYear, twelveMonthsAgoMonth);\n                return [twelveMonthsAgo, monthEnd];\n            case \"last_24\":\n                const [twentyFourMonthsAgoYear, twentyFourMonthsAgoMonth] = addMonths(monthStart.getFullYear(), monthStart.getMonth(), -23)\n                const twentyFourMonthsAgo = new Date(twentyFourMonthsAgoYear, twentyFourMonthsAgoMonth);\n                return [twentyFourMonthsAgo, monthEnd];\n            case \"last_60\":\n                const [sixtyMonthsAgoYear, sixtyMonthsAgoMonth] = addMonths(monthStart.getFullYear(), monthStart.getMonth(), -59)\n                const sixtyMonthsAgo = new Date(sixtyMonthsAgoYear, sixtyMonthsAgoMonth);\n                return [sixtyMonthsAgo, monthEnd];\n            default:\n                throw new Error(\"Invalid selection\");\n        }\n    }\n\n    submit() {\n        this.userCookieInputRef.current.blur();\n        const [startDate, endDate] = this.getDateRangeFromOption();\n        this.props.onSubmit({\n            userId: this.state.userId,\n            userCookie: this.state.userCookie,\n            startDate: startDate,\n            endDate: endDate,\n        });\n    }\n\n    handleKeyPress(event) {\n        // Suppress Enter\n        if (event.charCode === 13) {\n            this.submit();\n            event.preventDefault();\n        }\n    }\n\n    setDateRangeOption(event) {\n        this.setState({\n            dateRangeOption: event.target.value,\n        });\n    }\n\n    setUserId(event) {\n        this.setState({\n            userId: event.target.value\n        });\n    }\n\n    setUserCookie(event) {\n        this.setState({\n            userCookie: event.target.value\n        });\n    }\n}\n\n\n","import React from \"react\";\nimport { localMidnightDateFromString, interpolate, monthsRange, monthStartAndEnd, formatDate, RequestPool } from \"./utils.js\";\n\nclass Puzzle {\n    constructor(data) {\n        this.data = data;\n    }\n\n    blob() {\n        try {\n            return {\n                id: this.id(),\n                date: this.date(),\n                day: this.day(),\n                attempted: this.attempted(),\n                solved: this.solved(),\n                cleanlySolved: this.cleanlySolved(),\n                solveTime: this.solveTime(),\n                solveDate: this.solveDate(),\n            };\n        } catch(e) {\n            throw new Error(\"failed to extract data: \" + JSON.stringify(this.data));\n        }\n    }\n\n    id() {\n        return this.data.puzzle_id;\n    }\n\n    date() {\n        return this.data.print_date;\n    }\n\n    day() {\n        return localMidnightDateFromString(this.data.print_date).getDay();\n    }\n\n    attempted() {\n        return this.data.firsts !== undefined;\n    }\n\n    solved() {\n        return this.data.solved;\n    }\n\n    cleanlySolved() {\n        return this.solved() && this.data.firsts.checked === undefined;\n    }\n\n    solveTime() {\n        // Sanitize NYT data problems\n        if (this.solved() && this.data.calcs.secondsSpentSolving !== undefined) {\n            return this.data.calcs.secondsSpentSolving;\n        }\n        return -1;\n    }\n\n    solveDate() {\n        if (this.solved()) {\n            return formatDate(new Date(this.data.firsts.solved * 1000));\n        }\n        return -1;\n    }\n}\n\nclass DataLoader extends React.Component {\n\n    static ARCHIVE_URL = \"https://nyt-games-prd.appspot.com/svc/crosswords/v3/{uid}/puzzles.json?publish_type=daily&sort_order=asc&sort_by=print_date&date_start={start_date}&date_end={end_date}\"\n    static GAME_URL = \"https://nyt-games-prd.appspot.com/svc/crosswords/v6/game/{gid}.json\"\n\n    constructor() {\n        super();\n        this.data = {};\n        this.state = {\n            loaded: false,\n            data: {},\n            progress: \"\",\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.numPendingRequests > 0 && this.state.numPendingRequests === 0) {\n            this.setState({\n                loaded: true,\n            });\n        }\n\n        if (\n            this.props.startDate.getTime() !== prevProps.startDate.getTime() ||\n            this.props.endDate.getTime() !== prevProps.endDate.getTime()\n        ) {\n            this.setState({\n                loaded: false,\n            });\n            this.fetch();\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    render() {\n        if (this.state.loaded === false) {\n            return \"Loading \" + this.state.progress;\n        }\n\n        return this.props.render(this.state.data);\n    }\n\n    fetch() {\n        const [startYear, startMonth] = [this.props.startDate.getFullYear(), this.props.startDate.getMonth()];\n        const [currentYear, currentMonth] = [this.props.endDate.getFullYear(), this.props.endDate.getMonth()];\n        const months = monthsRange(startYear, startMonth, currentYear, currentMonth);\n\n        const monthDataRequestPool = new RequestPool(\n            20,\n            (numCompleted, numTotal) => {\n                this.setState({\n                    progress: numCompleted + \"/\" + numTotal + \" months\"\n                });\n            },\n        );\n\n        months.forEach(yearAndMonth => {\n            const [year, month] = yearAndMonth;\n            const date = new Date(year, month, 1)\n            // If we already have data for the 1st day of the month, assume we have everything.\n            if (this.data[formatDate(date)] === undefined) {\n                monthDataRequestPool.addRequest(() => this.fetchMonth(year, month));\n            }\n        });\n        monthDataRequestPool.start();\n        monthDataRequestPool.poll().then(results => {\n            results.filter(result => result.results !== null).forEach(result => this.processMonthData(result));\n            this.setState({\n                progress: \"puzzle data\",\n            });\n            this.fetchPuzzles();\n        });\n    }\n\n    fetchMonth(year, month) {\n        const [monthStart, monthEnd] = monthStartAndEnd(year, month);\n        return window.fetch(\n            interpolate(DataLoader.ARCHIVE_URL, {\n                uid: this.props.userId,\n                start_date: formatDate(monthStart),\n                end_date: formatDate(monthEnd),\n            })\n        )\n            .then(response => response.json());\n    }\n\n    processMonthData(data) {\n        data.results.forEach(puzzleData => {\n            this.data[puzzleData.print_date] = puzzleData;\n        });\n    }\n\n    fetchPuzzles() {\n        const puzzleRequestPool = new RequestPool(\n            20,\n            (numCompleted, numTotal) => {\n                this.setState({\n                    progress: numCompleted + \"/\" + numTotal + \" puzzles\"\n                });\n            },\n        )\n        Object.keys(this.data).forEach(puzzleDate => { // Optimization: Skip fetching puzzles if they haven't been filled out at all.\n            // Should work fine with the Puzzle class but may wrongly classify puzzles\n            // as unattempted (if attempted but not filled out at all)\n            //\n            // Also skip loading if it looks like we've loaded puzzle-level data already\n            //\n            // Also handle a weird edge case for data where the puzzle is solved but 0% filled by always loading\n            // data for solved puzzles.\n            if (\n                (this.data[puzzleDate].solved || this.data[puzzleDate].percent_filled !== 0) &&\n                this.data[puzzleDate].calcs === undefined\n            ) {\n                puzzleRequestPool.addRequest(() => this.fetchPuzzle(puzzleDate));\n            }\n        });\n\n        puzzleRequestPool.start();\n        puzzleRequestPool.poll().then(results => {\n            results.forEach(result => {\n                const [puzzleDate, solveData] = result;\n                this.data[puzzleDate].calcs = solveData.calcs;\n                this.data[puzzleDate].firsts = solveData.firsts;\n            });\n\n            const processedData = Object.values(this.data).map(puzzleData => new Puzzle(puzzleData).blob());\n\n            this.setState({\n                loaded: true,\n                data: processedData,\n            });\n        });\n    }\n\n    fetchPuzzle(puzzleDate) {\n        const puzzleId = this.data[puzzleDate].puzzle_id;\n        return window.fetch(\n            interpolate(DataLoader.GAME_URL, {\n                gid: puzzleId,\n            }), {\n                headers: {\n                    \"nyt-s\": this.props.userCookie,\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(json => [puzzleDate, json]);\n\n    }\n}\n\nexport default DataLoader;\n\n\n","import React from \"react\";\nimport * as dc from \"dc\";\nimport * as crossfilter from \"crossfilter2\";\nimport * as d3 from \"d3\";\nimport \"./DataVisualizer.css\";\nimport { formatTime, range, MovingWindow } from \"./utils.js\";\n\nexport default class DataVisualizer extends React.Component {\n    state = {\n        timeWindow: 60,\n        windowSize: 10,\n        useSolveDate: false,\n    };\n\n    componentDidMount() {\n        setTimeout(() => this.draw(), 0);\n    }\n\n    componentDidUpdate() {\n        setTimeout(() => this.draw(), 0);\n    }\n\n    draw() {\n        const component = this;\n        this.ndx = crossfilter(this.props.data);\n\n        function getStatus(d) {\n            if (d.solved) {\n                return \"Solved\";\n            } else if (d.attempted) {\n                return \"In Progress\";\n            } else {\n                return \"Not Started\";\n            }\n        }\n\n        const weekDimension = this.ndx.dimension(d => {\n            const date = this.state.useSolveDate ? d.solveDate : d.date;\n            return d3.timeWeek.floor(new Date(date))\n        });\n\n        const countByWeekAndStatusGroup = weekDimension.group().reduce(\n            (group, puzzleData) => {\n                if (puzzleData.solved) {\n                    group.solved += 1;\n                } else if (puzzleData.attempted) {\n                    group.attempted += 1;\n                } else {\n                    group.not_started += 1;\n                }\n                return group;\n            },\n            (group, puzzleData) => {\n                if (puzzleData.solved) {\n                    group.solved -= 1;\n                } else if (puzzleData.attempted) {\n                    group.attempted -= 1;\n                } else {\n                    group.not_started -= 1;\n                }\n                return group;\n            },\n            () => ({\n                attempted: 0,\n                solved: 0,\n                not_started: 0,\n            })\n        );\n        const dateChart = dc.barChart(\"#DataVisualizer-dateChart\");\n\n        dateChart\n            .width(1000)\n            .height(150)\n            .margins({ left: 100, right: 50, top: 5, bottom: 30 })\n            .dimension(weekDimension)\n            .group(countByWeekAndStatusGroup, \"Solved\", group => group.value.solved)\n            .stack(countByWeekAndStatusGroup, \"In Progress\", group => group.value.attempted)\n            .stack(countByWeekAndStatusGroup, \"Not Started\", group => group.value.not_started)\n            .elasticY(true)\n            .x(d3.scaleTime().domain([this.props.startDate.getTime(), this.props.endDate.getTime()]))\n            .round(d3.timeWeek.floor)\n            .xUnits(d3.timeWeeks);\n\n        dateChart.legend(dc.legend());\n        dateChart.render();\n\n\n        // Shares a reducer with solveTimeByDayGroup\n        const solveTimeByWeekGroup = weekDimension.group().reduce(\n            (group, d) => {\n                if (d.solved) {\n                    group.totalTime += d.solveTime;\n                    group.numSolved++;\n                    group.avgTime = group.numSolved ? group.totalTime / group.numSolved : 0;\n                }\n                return group;\n            },\n            (group, d) => {\n                if (d.solved) {\n                    group.totalTime -= d.solveTime;\n                    group.numSolved--;\n                    group.avgTime = group.numSolved ? group.totalTime / group.numSolved : 0;\n                }\n                return group;\n            },\n            () => ({\n                totalTime: 0,\n                numSolved: 0,\n                avgTime: 0,\n            })\n        );\n\n        function averageSolveTimeOverTimeGrouper(sourceGroup) {\n            return {\n                all: () => {\n                    const movingWindow = new MovingWindow(component.state.windowSize);\n                    return sourceGroup.all().map(g => {\n                        movingWindow.add(g.value);\n                        const windowTotals = movingWindow.items().reduce(\n                            (acc, groupValue) => {\n                                acc.totalTime += groupValue.totalTime;\n                                acc.numSolved += groupValue.numSolved;\n                                return acc;\n                            },\n                            { totalTime: 0, numSolved: 0 }\n                        );\n\n                        const windowAverage = windowTotals.numSolved > 0\n                            ? windowTotals.totalTime / windowTotals.numSolved\n                            : 0;\n\n                        return { key: g.key, value: windowAverage };\n                    });\n                }\n            }\n        }\n        const averageSolveTimeOverTimeGroup = averageSolveTimeOverTimeGrouper(solveTimeByWeekGroup);\n\n        const solveTimeOverTimeChart = new dc.LineChart(\"#DataVisualizer-solveTimeOverTimeChart\");\n        solveTimeOverTimeChart\n            .width(1000)\n            .height(400)\n            .margins({ left: 30, right: 50, top: 10, bottom: 30 })\n            .dimension(weekDimension)\n            .group(averageSolveTimeOverTimeGroup)\n            .rangeChart(dateChart)\n            .brushOn(false)\n            .mouseZoomable(true)\n            .curve(d3.curveCatmullRom.alpha(0.5))\n            .x(d3.scaleTime().domain([this.props.startDate.getTime(), this.props.endDate.getTime()]))\n            .round(d3.timeWeek.floor)\n            .xUnits(d3.timeWeeks)\n            .elasticY(true)\n            .yAxisPadding(60);\n\n        solveTimeOverTimeChart\n            .yAxis()\n            .tickValues(range(0, 90, 5).map(m => m * 60))\n            .tickFormat(v => Math.floor(v/60));\n\n        solveTimeOverTimeChart.render();\n\n        const solveTimeDimension = this.ndx.dimension(d => {\n            return Math.floor(d.solveTime / 60);\n        });\n        const solveTimeGroup = solveTimeDimension.group(value => {\n            return Math.floor(value/2) * 2;\n        });\n        const solveTimeChart = new dc.BarChart(\"#DataVisualizer-timeDistributionChart\");\n\n        solveTimeChart\n            .width(1000)\n            .height(400)\n            .margins({ left: 100, right: 50, top: 10, bottom: 30 })\n            .dimension(solveTimeDimension)\n            .group(solveTimeGroup)\n            .round(v => Math.floor(v))\n            .x(d3.scaleLinear().domain([0, this.state.timeWindow]))\n            .xUnits(() => this.state.timeWindow / 2)\n            .elasticY(true);\n\n        solveTimeChart.render();\n\n\n\n        // # Render Column 2\n        const dayDimension = this.ndx.dimension(d => d.day);\n        const dayGroup = dayDimension.group();\n\n        const daysOfWeek = [0, 1, 2, 3, 4, 5, 6];\n        const daysOfWeekLabels = [\"Su\", \"M\", \"Tu\", \"W\", \"Th\", \"Fr\", \"Sa\"];\n        const dayChart = new dc.PieChart(\"#DataVisualizer-dayChart\");\n        dayChart\n            .width(200)\n            .height(200)\n            .dimension(dayDimension)\n            .group(dayGroup)\n            .label(d => `${daysOfWeekLabels[d.key]} (${d.value})`);\n\n        dayChart.render();\n\n\n        const statusDimension = this.ndx.dimension(getStatus);\n        const statusGroup = statusDimension.group();\n\n        const statusChart = new dc.PieChart(\"#DataVisualizer-statusChart\");\n        statusChart\n            .width(200)\n            .height(200)\n            .dimension(statusDimension)\n            .group(statusGroup)\n            .label(d => `${d.key} (${d.value})`);\n\n        statusChart.render();\n\n\n        const dayDimension2 = this.ndx.dimension(d => d.day);\n        const solveRateByDayGroup = dayDimension2.group().reduce(\n            (group, d) => {\n                if (d.solved) {\n                    group.solved++;\n                }\n                group.total++;\n                group.solvePct = Math.round(100 * group.solved / group.total);\n                return group;\n            },\n            (group, d) => {\n                if (d.solved) {\n                    group.solved--;\n                }\n                group.total--;\n                group.solvePct = group.total === 0 ? 0 : Math.round(100 * group.solved / group.total);\n                return group;\n            },\n            () => ({\n                solved: 0,\n                total: 0,\n                solvePct: 0,\n            })\n        );\n\n        const solveRateChart = new dc.RowChart(\"#DataVisualizer-solveRateChart\");\n        solveRateChart\n            .width(220)\n            .height(230)\n            .margins({ left: 10, top: 0, bottom: 30, right: 20 })\n            .dimension(dayDimension2)\n            .group(solveRateByDayGroup)\n            .valueAccessor(g => g.value.solvePct)\n            .label(d => `${daysOfWeekLabels[d.key]} (${d.value.solvePct}%)`);\n        solveRateChart.render();\n\n        const solveTimeByDayGroup = dayDimension2.group().reduce(\n            (group, d) => {\n                if (d.solved) {\n                    group.totalTime += d.solveTime;\n                    group.numSolved++;\n                    group.avgTime = group.numSolved ? group.totalTime / group.numSolved : 0;\n                }\n                return group;\n            },\n            (group, d) => {\n                if (d.solved) {\n                    group.totalTime -= d.solveTime;\n                    group.numSolved--;\n                    group.avgTime = group.numSolved ? group.totalTime / group.numSolved : 0;\n                }\n                return group;\n            },\n            () => ({\n                totalTime: 0,\n                numSolved: 0,\n                avgTime: 0,\n            })\n        );\n        const solveTimeByDayChart = new dc.RowChart(\"#DataVisualizer-solveTimeChart\");\n        solveTimeByDayChart\n            .width(220)\n            .height(230)\n            .margins({ left: 10, top: 0, bottom: 30, right: 20 })\n            .elasticX(true)\n            .dimension(dayDimension2)\n            .group(solveTimeByDayGroup)\n            .valueAccessor(g => g.value.avgTime)\n            .label(d => `${daysOfWeekLabels[d.key]} (${formatTime(d.value.avgTime)})`);\n\n        solveTimeByDayChart\n            .xAxis()\n            .ticks(4)\n            .tickValues(range(0, this.state.timeWindow, 15).map(m => m * 60))\n            .tickFormat(v => Math.floor(v/60));\n        solveTimeByDayChart.render();\n\n        const dateDimension = this.ndx.dimension(d => {\n            const date = this.state.useSolveDate ? d.solveDate : d.date;\n            return d3.timeDay.floor(new Date(date))\n        });\n\n        const table = new dc.DataTable(\"#DataVisualizer-dataTable\");\n        table\n            .dimension(dateDimension)\n            .size(100)\n            .columns([\n                \"date\",\n                \"solveDate\",\n                { label: \"Day\", format: d => daysOfWeekLabels[d.day] },\n                { label: \"Status\", format: d => getStatus(d) },\n                \"solveTime\",\n            ])\n            .on(\"renderlet\", table => {\n              table.selectAll(\".dc-table-group\").classed(\"info\", true);\n            });\n        table.render();\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"DataVisualizer\">\n                <div className=\"DataVisualizer-charts\">\n                    <div id=\"DataVisualizer-col1\" className=\"DataVisualizer-col\">\n                        <ChartSection title=\"Average completion time over time (minutes, smoothed)\" chartId=\"solveTimeOverTimeChart\" />\n                        <ChartSection title=\"Completion time distribution (minutes)\" chartId=\"timeDistributionChart\" />\n                        <ChartSection title=\"Puzzles by week\" chartId=\"dateChart\" />\n                    </div>\n                    <div id=\"DataVisualizer-col2\" className=\"DataVisualizer-col\">\n                        <ChartSection title=\"By day\" chartId=\"dayChart\" />\n                        <ChartSection title=\"By status\" chartId=\"statusChart\" />\n                        <ChartSection title=\"Completion rate\" chartId=\"solveRateChart\" />\n                        <ChartSection title=\"Average completion time\" chartId=\"solveTimeChart\" />\n                    </div>\n                </div>\n                <table className=\"table table-hover\" id=\"DataVisualizer-dataTable\"></table>\n            </div>\n        );\n\n    }\n}\n\nclass ChartSection extends React.Component {\n    render() {\n        return (\n             <div className=\"DataVisualizer-chartSection\">\n                <div className=\"DataVisualizer-chartHeader\">\n                    {this.props.title}\n                </div>\n                <div id={`DataVisualizer-${this.props.chartId}`}></div>\n            </div>\n        );\n\n    }\n}\n\n\n","import React from \"react\";\nimport DataLoader from \"./DataLoader.js\";\nimport DataVisualizer from \"./DataVisualizer.js\";\n\nexport default class MainContent extends React.Component {\n    constructor() {\n        super();\n        this.renderVisualization = this.renderVisualization.bind(this);\n    }\n\n    render() {\n        return (\n            <DataLoader\n                userId={this.props.userId}\n                userCookie={this.props.userCookie}\n                render={this.renderVisualization}\n                startDate={this.props.startDate}\n                endDate={this.props.endDate}\n            />\n        );\n    }\n\n    renderVisualization(data) {\n        return <DataVisualizer data={data} startDate={this.props.startDate} endDate={this.props.endDate} />;\n    }\n}\n\n\n","import React from \"react\";\nimport \"./App.css\";\nimport UserForm from \"./UserForm.js\";\nimport MainContent from \"./MainContent.js\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            userId: null,\n            userCookie: null,\n            startDate: new Date(2020, 0, 1),\n            endDate: new Date(2020, 9, 1),\n        };\n        this.onInputUserDetails = this.onInputUserDetails.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <UserForm onSubmit={this.onInputUserDetails}/>\n                {\n                    this.state.userId\n                        ?  <MainContent\n                                userId={this.state.userId}\n                                userCookie={this.state.userCookie}\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                                key={this.state.userId}\n                           />\n                        : null\n                }\n            </div>\n        );\n    }\n\n    onInputUserDetails(attr) {\n        this.setState(attr);\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}